@page "/loggin"

<PageTitle>Login</PageTitle>

<h1>Connectez-vous</h1>
<h2>Version 10.03.2024</h2>

<div class="card">
    <div class="container">
        <EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <h3>UserName</h3>
            <InputText type="text" id="userName" @bind-Value="loginModel.UserName" class="form-control" />
            <br />
            <h3>Password</h3>
            <InputText type="password" id="password" @bind-Value="loginModel.Password" class="form-control" />
            <br />
            <br />
            <button type="submit" class="w-100 btn btn-lg btn-outline-primary">Submit</button>
            <a href="/register">Not registered yet? Click here to do so.</a>
            <ValidationSummary />

            <p style="color:red;">
                @error
            </p>
        </EditForm>
    </div>
</div>


@code {
    @inject NavigationManager MyNavigationManager
    @inject IJSRuntime JSRuntime;
    @using System.Net.Http;
    @using System.Net.Http.Json;
    @using System.Text;
    @using System.Web;
    @using Newtonsoft.Json.Linq;
    @using Newtonsoft.Json;
    // dotnet add JSRuntime

    private int currentCount = 0;

    public LoginModel loginModel = new();

    public string error = "";

    private dynamic? username;

    private void IncrementCount()
    {
        currentCount++;
    }
    
    protected override async Task OnInitializedAsync()
    {
        bool connected = Convert.ToBoolean(await JSRuntime.InvokeAsync<string>("BlazorGetLocalStore", "IsConnected"));

        if (connected)
        {
            await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "Username", "");
            await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "ID", "");
            await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "IsConnected", "false");
            MyNavigationManager.NavigateTo("/");
        }
        StateHasChanged();

    }

    private async void HandleValidSubmit()
    {
        // Console.WriteLine(loginModel.UserName + loginModel.Password);
        using var client = new HttpClient();
        var response = await client.GetStringAsync("http://localhost:3000/users");
        JArray users = JArray.Parse(response);

        foreach (dynamic user in users)
        {
            if (user["name"] == loginModel.UserName && user["password"] == loginModel.Password)
            {
                await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "Username", loginModel.UserName);
                string id = user["_id"];
                await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "ID", id);
                await JSRuntime.InvokeVoidAsync("BlazorSetLocalStore", "IsConnected", "true");
                MyNavigationManager.NavigateTo("/");
            }
            else
            {
                error = "Username or password is invalid";
                StateHasChanged();
            }

        }
        // Console.WriteLine(loginModel.UserName + loginModel.Password);
    }
}
